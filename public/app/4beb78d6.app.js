"use strict";angular.module("doingFineApp",["ngCookies","ngResource","ngSanitize","btford.socket-io","ui.router","ui.bootstrap","ui.mask"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(a,b,c,d){b.otherwise("/"),c.html5Mode(!0),d.interceptors.push("authInterceptor")}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},c.get("token")&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("token"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/login")})})}]),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("doingFineApp").controller("LoginCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({email:a.user.email,password:a.user.password}).then(function(){c.path("/schedules")}).catch(function(b){a.errors.other=b.message})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("doingFineApp").controller("SettingsCtrl",["$scope","User","Auth",function(a,b,c){a.errors={},a.changePassword=function(b){a.submitted=!0,b.$valid&&c.changePassword(a.user.oldPassword,a.user.newPassword).then(function(){a.message="Password successfully changed."}).catch(function(){b.password.$setValidity("mongoose",!1),a.errors.other="Incorrect password",a.message=""})},a.accountUpdate=function(c){a.submitted=!0,c.$valid&&b.accountUpdate(a.user)},b.get(function(b){a.user=b,"+1"===b.phone.slice(0,2)&&(a.user.phone=b.phone.slice(2))})}]),angular.module("doingFineApp").controller("SignupCtrl",["$scope","Auth","$location","$window",function(a,b,c,d){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,phone:"+1"+a.user.phone,email:a.user.email,password:a.user.password}).then(function(){c.path("/publisher-create")}).catch(function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})},a.loginOauth=function(a){d.location.href="/auth/"+a}}]),angular.module("doingFineApp").controller("AdminCtrl",["$scope","$http","Auth","User",function(a,b,c,d){a.users=d.query(),a.delete=function(b){d.remove({id:b._id}),angular.forEach(a.users,function(c,d){c===b&&a.users.splice(d,1)})}}]),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl"})}]),angular.module("doingFineApp").controller("FollowersCtrl",["$scope",function(a){a.submitted=!0,a.submit=function(){a.submitted=!0}}]),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("followers",{url:"/followers",templateUrl:"app/followers/followers.html",controller:"FollowersCtrl"})}]),angular.module("doingFineApp").controller("MainCtrl",function(){}),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("doingFineApp").controller("PublisherCreateCtrl",["$scope","$state","Schedule","User",function(a,b,c,d){a.schedule={},d.get(function(b){a.schedule.subscriberName=b.name,a.schedule.subscriberPhone=b.phone,a.schedule.subscriberID=b._id}),a.submit=function(d){d.$valid&&(c.schedule=a.schedule,c.schedule.publisherPhone="+1"+a.schedule.publisherPhone,console.log("Publisher Name and Phone Submitted!"),b.go("schedule-create"))}}]),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("publisher-create",{url:"/publisher-create",templateUrl:"app/publisher-create/publisher-create.html",controller:"PublisherCreateCtrl",authenticate:!0})}]),angular.module("doingFineApp").controller("ScheduleCreateCtrl",["$scope","Schedule","$state",function(a,b,c){console.log(b.schedule),a.schedule=b.schedule,a.schedule.times=new Date,a.hstep=1,a.mstep=1,a.options={hstep:[1,2,3],mstep:[1,5,10,15,25,30]},a.ismeridian=!0,a.toggleMode=function(){a.ismeridian=!a.ismeridian},a.update=function(){var b=new Date;b.setHours(14),b.setMinutes(0),a.schedule.times=b},a.clear=function(){a.schedule.times=null},a.days=[{name:"Monday",value:1},{name:"Tuesday",value:2},{name:"Wednesday",value:3},{name:"Thursday",value:4},{name:"Friday",value:5},{name:"Saturday",value:6},{name:"Sunday",value:0}],a.schedule.days=[0,1,2,3,4,5,6],a.toggleDay=function(b){var c=a.schedule.days.indexOf(b.value);c>-1?a.schedule.days.splice(c,1):a.schedule.days.push(b.value)},a.submitted=!1,a.submit=function(d){if(d.$valid){var e=(a.schedule.times.getMinutes()<10?"0":"")+a.schedule.times.getMinutes();b.schedule.times=[a.schedule.times.getHours()+":"+e],b.submit(a.schedule),c.go("followers")}}}]),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("schedule-create",{url:"/schedule-create",templateUrl:"app/schedule-create/schedule-create.html",controller:"ScheduleCreateCtrl",authenticate:!0})}]),angular.module("doingFineApp").controller("ScheduleEditCtrl",["$scope","$rootScope","$state","Schedule",function(a,b,c,d){if(b.editSchedule){a.schedule=b.editSchedule,a.schedule.publisherPhone=a.schedule.publisherPhone.slice(2),a.days=[{name:"Monday",value:1},{name:"Tuesday",value:2},{name:"Wednesday",value:3},{name:"Thursday",value:4},{name:"Friday",value:5},{name:"Saturday",value:6},{name:"Sunday",value:0}],a.toggleDay=function(b){var c=a.schedule.days.indexOf(b.value);c>-1?a.schedule.days.splice(c,1):a.schedule.days.push(b.value)},a.submit=function(b){if(b.$valid){var e=_.clone(a.schedule);e.days.sort(),e.publisherPhone="+1"+e.publisherPhone,d.update(e).then(function(){c.go("schedules")})}};var e=a.schedule.times[0].split(":"),f=parseInt(e[0]),g=parseInt(e[1]);a.schedule.times=new Date,a.schedule.times.setHours(f),a.schedule.times.setMinutes(g),a.hstep=1,a.mstep=1,a.options={hstep:[1,2,3],mstep:[1,5,10,15,25,30]},a.ismeridian=!0,a.toggleMode=function(){a.ismeridian=!a.ismeridian},a.update=function(){var b=new Date;b.setHours(14),b.setMinutes(0),a.schedule.times=b},a.clear=function(){a.schedule.times=null}}else c.go("schedules")}]),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("schedule-edit",{url:"/schedule-edit",templateUrl:"app/schedule-edit/schedule-edit.html",controller:"ScheduleEditCtrl"})}]),angular.module("doingFineApp").controller("SchedulesCtrl",["$scope","$rootScope","$state","$http","User","Schedule",function(a,b,c,d,e,f){a.formatDay=function(a){var b=["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sun"];return b[a]},a.edit=function(a){b.editSchedule=a,c.go("schedule-edit")},a.destroy=function(a){f.destroy(a).then(function(){g()})};var g=function(){e.get(function(b){a.userID=b._id,d.get("api/users/"+a.userID+"/schedules").success(function(b){a.mySchedules=b})})};g()}]),angular.module("doingFineApp").config(["$stateProvider",function(a){a.state("schedules",{url:"/schedules",templateUrl:"app/schedules/schedules.html",controller:"SchedulesCtrl",authenticate:!0})}]),angular.module("doingFineApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return e.get("token")&&(g=d.get()),{login:function(a,b){var h=b||angular.noop,i=f.defer();return c.post("/auth/local",{email:a.email,password:a.password}).success(function(a){return e.put("token",a.token),g=d.get(),i.resolve(a),h()}).error(function(a){return this.logout(),i.reject(a),h(a)}.bind(this)),i.promise},logout:function(){e.remove("token"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({id:g._id},{oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("role")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)}).catch(function(){a(!1)}):a(g.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===g.role},getToken:function(){return e.get("token")}}}]),angular.module("doingFineApp").factory("User",["$http","$resource",function(a,b){return b("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}},accountUpdate:{method:"PUT"}})}]),angular.module("ng").filter("tel",function(){return function(a){if(!a)return"";var b=a.toString().trim().replace(/^\+/,"");if(b.match(/[^0-9]/))return a;var c,d,e;switch(b.length){case 10:c=1,d=b.slice(0,3),e=b.slice(3);break;case 11:c=b[0],d=b.slice(1,4),e=b.slice(4);break;case 12:c=b.slice(0,3),d=b.slice(3,5),e=b.slice(5);break;default:return a}return 1===c&&(c=""),e=e.slice(0,3)+"-"+e.slice(3),(c+" ("+d+") "+e).trim()}}),angular.module("doingFineApp").directive("match",function(){return{require:"ngModel",restrict:"A",scope:{match:"="},link:function(a,b,c,d){a.$watch(function(){return d.$pristine&&angular.isUndefined(d.$modelValue)||a.match===d.$modelValue},function(a){d.$setValidity("match",a)})}}}),angular.module("doingFineApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("doingFineApp").controller("NavbarCtrl",["$scope","$location","Auth",function(a,b,c){a.menu=[{title:"Home",link:"/"}],a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}]),angular.module("doingFineApp").factory("Schedule",["$http","$rootScope",function(a,b){var c={},d=function(b){a.post("/api/schedules",b).success(function(a){console.log("Successfully posted schedule",a)}).error(function(a){console.log("Error",a)})},e=function(c){var d=c.times.getHours(),e=(c.times.getMinutes()<10?"0":"")+c.times.getMinutes();return c.times=[d+":"+e],a.put("/api/schedules/"+c._id,c).success(function(a){console.log("Successfully updated schedule",a),b.editSchedule=null}).error(function(a){console.log("Error",a)})},f=function(b){return a.delete("/api/schedules/"+b._id).success(function(){console.log("Successfully removed schedule")}).error(function(a){console.log("Error",a)})};return{schedule:c,submit:d,update:e,destroy:f}}]),angular.module("doingFineApp").factory("socket",["socketFactory",function(a){var b=io(null,{}),c=a({ioSocket:b});return{socket:c,syncUpdates:function(a,b,d){d=d||angular.noop,c.on(a+":save",function(a){var c=_.find(b,{_id:a._id}),e=b.indexOf(c),f="created";c?(b.splice(e,1,a),f="updated"):b.push(a),d(f,a,b)}),c.on(a+":remove",function(a){var c="deleted";_.remove(b,{_id:a._id}),d(c,a,b)})},unsyncUpdates:function(a){c.removeAllListeners(a+":save"),c.removeAllListeners(a+":remove")}}}]),angular.module("doingFineApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-3></div><div class=col-sm-6><h1>Login</h1><p>Welcome back to DoingFine.</p><form class=form name=form ng-submit=login(form) novalidate><div class=form-group><label>Email</label><input type=email name=email class=form-control ng-model=user.email required></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=user.password required></div><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && submitted">Please enter your email and password.</p><p class=help-block ng-show="form.email.$error.email && submitted">Please enter a valid email.</p><p class=help-block>{{ errors.other }}</p></div><div><button class="btn btn-primary btn-lg btn-login" type=submit>Login</button><br><br><a href=/signup>Register</a></div><!-- Future Featre: Oauth Integration --><!-- <div>\n          <a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')">\n            <i class="fa fa-facebook"></i> Connect with Facebook\n          </a>\n          <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')">\n            <i class="fa fa-google-plus"></i> Connect with Google+\n          </a>\n          <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')">\n            <i class="fa fa-twitter"></i> Connect with Twitter\n          </a>\n        </div> --></form></div><div class=col-sm-3></div></div></div>'),a.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-3></div><div class=col-sm-6><form class=form name=topForm ng-submit=accountUpdate(topForm) novalidate><h1>Change Account Info</h1><div class=form-group ng-class="{ \'has-success\': topForm.name.$valid && submitted,\'has-error\': topForm.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="topForm.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': topForm.phone.$valid && submitted,\'has-error\': topForm.phone.$invalid && submitted }"><label>Phone</label><input type=tel name=tel class=form-control ng-model=user.phone required mongoose-error ui-mask="(999) 999-9999" placeholder="(___) ___-____"><p class=help-block ng-show="topForm.phone.$error.phone && submitted">Doesn\'t look like a valid phone number.</p><p class=help-block ng-show="topForm.phone.$error.required && submitted">What\'s your phone number?</p><p class=help-block ng-show=topForm.phone.$error.mongoose>{{ errors.phone }}</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\'has-error\': topForm.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="topForm.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="topForm.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=topForm.email.$error.mongoose>{{ errors.email }}</p></div><button class="btn btn-lg btn-primary" type=submit>Save Changes</button></form><form class=form name=form ng-submit=changePassword(form) novalidate><h1>Change Password</h1><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save Changes</button></form></div><div class=col-sm-3></div></div></div>'),a.put("app/account/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-3></div><div class=col-sm-6><h1>Sign up</h1><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.phone.$valid && submitted,\n                                            \'has-error\': form.phone.$invalid && submitted }"><label>Phone</label><input type=tel name=tel class=form-control ng-model=user.phone required mongoose-error ui-mask="(999) 999-9999" placeholder="(___) ___-____"><p class=help-block ng-show="form.phone.$error.phone && submitted">Doesn\'t look like a valid phone number.</p><p class=help-block ng-show="form.phone.$error.required && submitted">What\'s your phone number?</p><p class=help-block ng-show=form.phone.$error.mongoose>{{ errors.phone }}</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div class=form-group ng-class="{ \'has-success\': form.passwordMatch.$valid && submitted,\n                                            \'has-error\': form.passwordMatch.$invalid && submitted }"><label>Confirm Password</label><input type=password name=passwordMatch class=form-control ng-model=user.passwordMatch required match=user.password><p class=help-block ng-show="(form.passwordMatch.$error.match || form.passwordMatch.$error.required) && submitted">Passwords must match.</p></div><div><button class="btn btn-primary btn-lg btn-login" type=submit>Next</button></div><!-- <div>\n          <a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')">\n            <i class="fa fa-facebook"></i> Connect with Facebook\n          </a>\n          <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')">\n            <i class="fa fa-google-plus"></i> Connect with Google+\n          </a>\n          <a class="btn btn-twitter" href="" ng-click="loginOauth(\'twitter\')">\n            <i class="fa fa-twitter"></i> Connect with Twitter\n          </a>\n        </div> --></form></div><div class=col-sm-3></div></div></div>'),a.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),a.put("app/followers/followers.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><!-- TODO: Toggle two states. Set schedule or Confirm --><div class=container ng-if=!submitted><div class=row><div class=col-md-3></div><div class=col-md-6><div class=well><h2>Followers</h2><form name=followersForm ng-submit=submit(followersForm)><button type=submit class="btn btn-primary"><i class="fa fa-check"></i>&nbsp; Submit</button></form></div></div><div class=col-md-3></div></div></div><div class=container ng-if=submitted><div class=row><div class=col-md-3></div><div class=col-md-6><div class="well confirmed"><h2>Confirmed!</h2><div><i class="fa fa-check-square-o" style="font-size: 10em; color: white"></i></div><a href=/schedules><button class="btn btn-primary">See Schedule</button></a></div></div><div class=col-md-3></div></div></div>'),a.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><header class=hero-unit id=banner><div class=container><h1>Doing Fine</h1><p class=lead>Is my loved one ok?</p><img src=assets/images/b6610213.okicon.png alt=DoingFine><br><br><button type=button class="btn-primary btn-lg" ui-sref=signup>Sign Up</button><br><br><p ui-sref=login><a style="color: white">Login</a></p></div></header><div class=container><div class=row><div class=col-lg-12><h2>Keep track of your elder loved ones with our convenient check-ins, newsfeed, and wellness dashboard.</h2></div></div></div><footer class=footer><div class=container><p><a href=http://www.doingfineapp.com>&copy; 2014 DoingFineApp</a></p><p>Peace of Mind on Autopilot</p></div></footer>'),a.put("app/publisher-create/publisher-create.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-md-3></div><div class=col-md-6><div class=well><h2>Who are you scheduling?</h2><form name=who ng-submit=submit(who)><div class=input-group><label>Name:</label><input class=form-control required placeholder=Name ng-model=schedule.publisherName></div><!-- TODO: validate phone number --><div class=input-group><label>Phone:</label><input type=tel name=tel class=form-control ng-model=schedule.publisherPhone required ui-mask="(999) 999-9999" placeholder="(___) ___-____"></div><h2>How do they want to check-in?</h2><div class=input-group><select ng-model=schedule.publisherCheckin class=form-control required><option value="">Select:</option><option>SMS</option><option>Phone</option></select></div><br><button type=submit class="btn btn-primary">Next</button></form></div></div><div class=col-md-3></div></div></div>'),a.put("app/schedule-create/schedule-create.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><!-- TODO: Toggle two states. Set schedule or Confirm --><div class=container ng-if=!submitted><div class=row><div class=col-md-3></div><div class=col-md-6><div class=well><h2>Set Schedule</h2><form name=scheduleForm ng-submit=submit(scheduleForm)><ul style="list-style: none"><li ng-repeat="day in days"><label><input type=checkbox name=scheduleDays[] value=day.value ng-checked="schedule.days.indexOf(day.value) > -1" ng-click=toggleDay(day)> {{ day.name }}</label></li></ul><div><timepicker ng-model=schedule.times hour-step=hstep minute-step=mstep show-meridian=ismeridian></timepicker></div><h2>Select how you want to receive your updates.</h2><div class=input-group><select ng-model=schedule.subscriberCommunicationType required class=form-control><option value="">Select:</option><option>Email</option><option>SMS</option></select></div><br><button type=submit class="btn btn-primary"><i class="fa fa-check"></i>&nbsp; Submit</button></form></div></div><div class=col-md-3></div></div></div>'),a.put("app/schedule-edit/schedule-edit.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-md-3></div><div class=col-md-6><div class=well><h2>Edit Schedule</h2><form name=scheduleForm ng-submit=submit(scheduleForm)><div class=input-group><label>Name:</label><input class=form-control required placeholder=Name ng-model=schedule.publisherName></div><div class=input-group><label>Phone:</label><input type=tel name=tel class=form-control ng-model=schedule.publisherPhone required ui-mask="(999) 999-9999" placeholder="(___) ___-____"></div><br><h3>How do they want to check-in?</h3><div class=input-group><select ng-model=schedule.publisherCheckin class=form-control required><option value="">Select:</option><option>SMS</option><option>Phone</option></select></div><br><ul style="list-style: none"><li ng-repeat="day in days"><label><input type=checkbox name=scheduleDays[] value=day.value ng-checked="schedule.days.indexOf(day.value) > -1" ng-click=toggleDay(day)> {{ day.name }}</label></li></ul><div><timepicker ng-model=schedule.times hour-step=hstep minute-step=mstep show-meridian=ismeridian></timepicker></div><br><h3>Select how you want to receive your updates.</h3><div class=input-group><select ng-model=schedule.subscriberCommunicationType required class=form-control><option value="">Select:</option><option>Email</option><option>SMS</option></select></div><br><button type=submit class="btn btn-primary">Save</button></form></div></div><div class=col-md-3></div></div></div>'),a.put("app/schedules/schedules.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><!-- TODO: Toggle two states. Set schedule or Confirm --><div class=row><div class=col-md-12><h2>Schedules</h2><table class="table table-striped"><thead><tr><td>Loved One</td><td>Phone</td><td>Days</td><td>Check-in Time</td><td>Check-in Via</td><td>Status Updates Via</td></tr></thead><tbody><tr ng-repeat="schedule in mySchedules"><td>{{ schedule.publisherName }}</td><td>{{ schedule.publisherPhone | tel }}</td><td><span ng-repeat="day in schedule.days">{{ formatDay(day) }}{{ $last ? \'\' : \', \' }}</span></td><td><span ng-repeat="time in schedule.times">{{ time }}{{ $last ? \'\' : \', \' }}</span></td><td>{{ schedule.publisherCheckin }}</td><td>{{schedule.subscriberCommunicationType}}</td><td><button class="btn btn-sm btn-default" ng-click=edit(schedule)>Edit</button></td><td><button class="btn btn-sm btn-danger" ng-click=destroy(schedule)>Delete</button></td></tr></tbody></table><button class="btn btn-lg btn-primary" ui-sref=publisher-create>+ Add Schedule</button></div></div></div>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>Doing Fine</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li><li ng-show=isAdmin() ng-class="{active: isActive(\'/admin\')}"><a href=/admin>Admin</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/signup\')}"><a href=/signup>Sign up</a></li><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a href=/login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hi {{ getCurrentUser().name }}</p></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/schedules\')}"><a ui-sref=schedules>Schedules</a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/logout\')}"><a href="" ng-click=logout()>Logout</a></li><li ng-show=isLoggedIn() ng-class="{active: isActive(\'/settings\')}"><a href=/settings><span class="glyphicon glyphicon-cog"></span></a></li></ul></div></div></div>')}]);